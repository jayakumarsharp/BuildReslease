ALTER PROCEDURE [dbo].[SP_StrategyReport](
 @i_business VARCHAR(50)=null,
 @i_businessline VARCHAR(50)=null,
 @i_strategyname VARCHAR(50)=null,
 @i_ltastrategyowner VARCHAR(50)=null,
 @i_region VARCHAR(50)=null,
 @i_ltaapplication VARCHAR(50)=null,
 @i_priority VARCHAR(50)=null,
 @i_status VARCHAR(50)=null,
 @i_userid VARCHAR(250)
)
AS
BEGIN
declare @Sql nvarchar(max);
declare @dynamicsql nvarchar(max);



SET @sql='select S.Id,S.RefNumber,FTAApplicationCodeId,FTAAC.FTAApplicationCode,FTAShortCodeId,FTAStrategyCodeId,FTASC.FTAStrategyCode,DiscretionaryCodeId,
DM.Discretionarycode,BusinessSuffixId,BSFM.BusinessSuffix,FTAStrategyCode,S.ParentId,PM.ParentId as ParentIdValue,S.ChildId,cM.ChildID as ChildIdValue,BusinessLineId,
BSL.BusinessLine,RegionId,R.RegionName,FTAApplicationNameId,APN.FTAApplicationName,FTAStrategyOwnerId,ApplicationCategoryId,ACM.ApplicationCategory,
StrategyTypeId,STM.StrategyType,VenueTypeId,VTM.VenueType,CapacityId,CPM.Capacity,CreatedBy,CreatedDate,Description,S.IsActive,LastModifiedBy,LastModifiedDate,Version,FTAStrategyNameId,FTASN.FTAStrategyName,S.FTAApplicationOwnerId,
S.Priority,S.PriorityScore,case SignOff  WHEN ''True'' THEN ''Attested'' else ''Pending'' end as SignOff
,SignOffDate,SignoffBy,LastModifiedDate ,LastModifiedBy,ThirdPartyAppId,TM.ThirdPartyAppName,
BusinessId,BM.business,FTAApplicationMappingId,FTAStrategyMappingId,BusinessMappingId,
S.DecomissionedDate,GoLiveDate,
S.StatusId,Ss.StatusName,AdditionalShortCode,
CountryIdList=STUFF  
(  
    (  
      SELECT DISTINCT '', ''+ CAST( C.id AS VARCHAR(MAX))  
      FROM tbl_country_master C,tbl_CountryStrategyMapping e   
      FOR XMl PATH('''')  
    ),1,1,''''  
)  ,
CountryNameList=STUFF  
(  
    (  
      SELECT DISTINCT '', ''+ CAST( C.CountryName AS VARCHAR(MAX))  
      FROM tbl_country_master C,tbl_CountryStrategyMapping e   
       FOR XMl PATH('''')  
    ),1,1,''''  
)  ,


SeniorManagementFunction,LTALongCode from tbl_strategy S 
join tbl_ftaapplicationcode_master FTAAC On S.FTAApplicationCodeId = FTAAC.Id 
join tbl_ftastrategycode_master FTASC on S.FTAStrategyCodeId = FTASC.Id 
JOin tbl_discretionarycode_master DM on s.DiscretionaryCodeId = DM.Id 
JOin tbl_businesssuffix_master BSFM on s.BusinessSuffixId = BSFM.Id 
JOIN tbl_parentid_master PM on s.ParentId = PM.Id 
join tbl_childid_master CM on S.ChildId = CM.Id 
JOIn tbl_businessline_master BSL on BusinessLineId = BSL.Id  
JOIN tbl_region_master R on S.RegionId = R.id 
JOIN tbl_ftaapplicationname_master APN on S.FTAApplicationNameId = APN.Id 
JOIN tbl_applicationcategory_master ACM on S.ApplicationCategoryId = ACM.Id 
JOIN tbl_ftastrategyname_master FTASN on S.FTAStrategyNameId = FTASN.Id 
JOIN tbl_strategytype_master STM on S.StrategyTypeId = STM.Id 
JOIN tbl_venuetype_master VTM on S.VenueTypeId = VTM.Id 
JOIN tbl_thirdpartyapplication TM on S.ThirdPartyAppId = TM.Id JOIN tbl_business_master BM on S.BusinessId = BM.Id 
JOIN tbl_capacity_master CPM on S.CapacityId = CPM.Id 
JOIN tbl_StrategyStatus ss on ss.Id=s.StatusId
right JOIN (SELECT  MAX(Id) as Id FROM tbl_strategy GROUP BY REfnumber) t2  ON S.ID = t2.Id where BusinessLineId in( select b.Id from tbl_userBusinessSectormapping bs join tbl_businessLine_master b  on bs.BusinessSectorId =b.Id where Userid='''+@i_userid+''')
 and RegionId in( select r.Id from tbl_userregionmapping rm join tbl_region_master r on rm.RegionId = r.Id where Userid='''+@i_userid+''')
  ';

SET @dynamicsql='';
if (@i_business != '' and @i_business is not null) begin
SET @dynamicsql=@dynamicsql+' and BusinessId in ('+@i_business+')';
end 


if (@i_businessline IS NOT NULL and @i_businessline != '') begin

SET @dynamicsql=@dynamicsql+'  and BusinessLineId in ('+@i_businessline+')';
end 

if (@i_strategyname != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and  FTAStrategyNameId in ('+@i_strategyname+')';
end 


if (@i_ltaapplication != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and FTAApplicationCodeId in ('+@i_ltaapplication +')';
end 



if (@i_ltastrategyowner != '') begin

SET  @dynamicsql=@dynamicsql+' and FTAStrategyOwnerId in ('+@i_ltastrategyowner+')';
end 


if (@i_region IS NOT NULL and @i_region != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and RegionId in ('+@i_region+')';
end 


if (@i_priority != '') begin

	

SET  @dynamicsql=@dynamicsql+'  and priority='+@i_priority;
end 



if (@i_status IS NOT NULL and @i_status != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and Statusid='+@i_status;
end 
	

	SET  @sql=@sql +@dynamicsql;

	
print(@sql)
EXECUTE (@sql);

END;



