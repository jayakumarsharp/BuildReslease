/****** Object:  StoredProcedure [dbo].[sp_delete_SystemFlow]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_SystemFlow](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_SystemFlow_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallSystemFlow]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallSystemFlow
CREATE  PROCEDURE [dbo].[sp_getallSystemFlow](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_SystemFlow_master where Id=@i_id;
end
else begin
select * from tbl_SystemFlow_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[SP_StrategyReport]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[SP_StrategyReport](
 @i_FTAApplicationCode VARCHAR(50)=null,
 @i_FTAStrategyCode VARCHAR(50)=null,
 @i_BusinessLine VARCHAR(50)=null,
 @i_Region VARCHAR(50)=null,
 @i_Country VARCHAR(50)=null,
 @i_FTAApplicationOwner VARCHAR(50)=null,
 @i_ApplicationCategory VARCHAR(50)=null,
 @i_VenueType VARCHAR(50)=null,
 @i_FTAApplicationNameId VARCHAR(50)=null,
 @i_ParentID VARCHAR(50)=null,
 @i_ChildID VARCHAR(50)=null,
 @i_ThirdPartyAppId VARCHAR(50)=null,
 @i_userid VARCHAR(250)
)
AS
BEGIN
declare @Sql varchar(max);
declare @dynamicsql varchar(max);
SET @sql='select S.Id,S.RefNumber,CountryNameList,FTAApplicationCodeId,FTAAC.FTAApplicationCode,FTAShortCodeId,CountryIdList,FTAStrategyCodeId,FTASC.FTAStrategyCode,DiscretionaryCodeId,
DM.Discretionarycode,BusinessSuffixId,BSFM.BusinessSuffix,FTAStrategyCode,S.ParentId,PM.ParentId as ParentIdValue,S.ChildId,cM.ChildID as ChildIdValue,BusinessLineId,
BSL.BusinessLine,RegionId,R.RegionName,CountryId,FTAApplicationNameId,APN.FTAApplicationName,FTAStrategyOwnerId,ApplicationCategoryId,ACM.ApplicationCategory,
StrategyTypeId,STM.StrategyType,VenueTypeId,VTM.VenueType,CapacityId,CPM.Capacity,CreatedBy,CreatedDate,Description,S.IsActive,LastModifiedBy,LastModifiedDate,
NoOfApprover,Version,FTAStrategyNameId,FTASN.FTAStrategyName,S.FTAApplicationOwnerId,
S.Priority,S.PriorityScore,case SignOff  WHEN ''True'' THEN ''Attested'' else ''Pending'' end as SignOff
,SignOffDate,SignoffBy,LastModifiedDate ,LastModifiedBy,ThirdPartyAppId,TM.ThirdPartyAppName,
BusinessId,BM.business,FTAApplicationMappingId,FTAStrategyMappingId,BusinessMappingId,
S.DecomissionedDate,GoLiveDate,
S.StatusId,Ss.StatusName,
SeniorManagementFunction,LTALongCode from tbl_strategy S 
join tbl_ftaapplicationcode_master FTAAC On S.FTAApplicationCodeId = FTAAC.Id 
join tbl_ftastrategycode_master FTASC on S.FTAStrategyCodeId = FTASC.Id 
JOin tbl_discretionarycode_master DM on s.DiscretionaryCodeId = DM.Id 
JOin tbl_businesssuffix_master BSFM on s.BusinessSuffixId = BSFM.Id 
JOIN tbl_parentid_master PM on s.ParentId = PM.Id 
join tbl_childid_master CM on S.ChildId = CM.Id 
JOIn tbl_businessline_master BSL on BusinessLineId = BSL.Id  
JOIN tbl_region_master R on S.RegionId = R.id 
JOIN tbl_ftaapplicationname_master APN on S.FTAApplicationNameId = APN.Id 
JOIN tbl_applicationcategory_master ACM on S.ApplicationCategoryId = ACM.Id 
JOIN tbl_ftastrategyname_master FTASN on S.FTAStrategyNameId = FTASN.Id 
JOIN tbl_strategytype_master STM on S.StrategyTypeId = STM.Id 
JOIN tbl_venuetype_master VTM on S.VenueTypeId = VTM.Id 
JOIN tbl_thirdpartyapplication TM on S.ThirdPartyAppId = TM.Id JOIN tbl_business_master BM on S.BusinessId = BM.Id 
JOIN tbl_capacity_master CPM on S.CapacityId = CPM.Id 
JOIN tbl_StrategyStatus ss on ss.Id=s.StatusId
right JOIN (SELECT  MAX(Id) as Id FROM tbl_strategy GROUP BY REfnumber) t2  ON S.ID = t2.Id where BusinessLineId in( select b.Id from tbl_userBusinessSectormapping bs join tbl_businessLine_master b  on bs.BusinessSectorId =b.Id where Userid='''+@i_userid+''')
 and RegionId in( select r.Id from tbl_userregionmapping rm join tbl_region_master r on rm.RegionId = r.Id where  Userid='''+@i_userid+''')
  ';

SET @dynamicsql='';
if (@i_FTAApplicationCode != '' and @i_FTAApplicationCode is not null) begin
SET @dynamicsql=@dynamicsql+' and FTAApplicationCodeId ='+@i_FTAApplicationCode;
end 


if (@i_FTAStrategyCode IS NOT NULL and @i_FTAStrategyCode != '') begin

SET @dynamicsql=@dynamicsql+'  and FTAStrategyCodeId ='+@i_FTAStrategyCode;
end 

if (@i_BusinessLine != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and BusinessLineId ='+@i_BusinessLine;
end 


if (@i_Region != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and RegionId ='+@i_Region;
end 

if (@i_Country != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and CountryIdList Like ''%'+@i_Country+'%''';
end 


if (@i_FTAApplicationOwner != '') begin

SET  @dynamicsql=@dynamicsql+' and FTAApplicationOwnerId ='''+@i_FTAApplicationOwner+ char(39);
end 


if (@i_ApplicationCategory IS NOT NULL and @i_ApplicationCategory != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and ApplicationCategoryId='+@i_ApplicationCategory;
end 


if (@i_FTAApplicationCode != '') begin

	

SET  @dynamicsql=@dynamicsql+'  and FTAApplicationCodeId='+@i_FTAApplicationCode;
end 



if (@i_FTAApplicationNameId IS NOT NULL and @i_FTAApplicationNameId != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and FTAApplicationNameId='+@i_FTAApplicationNameId;
end 




if (@i_ParentID IS NOT NULL and @i_ParentID != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and PM.ID='+@i_ParentID;
end 



if (@i_ChildID IS NOT NULL and @i_ChildID != '') begin
	
SET  @dynamicsql=@dynamicsql+'  and CM.ID='+@i_ChildID;
end 

if (@i_ThirdPartyAppId IS NOT NULL and @i_ThirdPartyAppId != '') begin

SET  @dynamicsql=@dynamicsql+'  and S.ThirdPartyAppId='+@i_ThirdPartyAppId;
end 


	
if (@i_VenueType != '') begin
	

SET  @dynamicsql=@dynamicsql+'  and VenueTypeId='+@i_VenueType;
end 
	

	SET  @sql=@sql +@dynamicsql;

	
print(@sql)
EXECUTE (@sql);

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_PriorityScoremaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_PriorityScoremaster
CREATE  PROCEDURE [dbo].[sp_update_PriorityScoremaster](
 @i_id INT,
 @i_PriorityScore VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;

update tbl_PriorityScore_master set PriorityScore =i_PriorityScore  where id=i_id;

END;
GO
/****** Object:  StoredProcedure [dbo].[Get_StrategyDelegatesApprovalByuser]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.Get_StrategyDelegatesApprovalByuser
CREATE PROCEDURE [dbo].[Get_StrategyDelegatesApprovalByuser](
 @i_user VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;

 Select  [Id], [RefNumber], [Version], [Approver], [OriginalApprover], [Comments], [ApprovedDate],[CreatedDate], [Status], [ActionStatus], [IsActive], [IsTransfered], [IsDelegateAccepted], [IsViewed], [IsModified], [Type]
 from tbl_approvaltransfer  where Approver=@i_user and IsActive='Y' and IsDelegateAccepted='P';
 

END;
GO
/****** Object:  StoredProcedure [dbo].[Get_StrategyApprovalByUser]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.Get_StrategyApprovalById

-- Dumping structure for procedure achiv1.Get_StrategyApprovalByUser
CREATE PROCEDURE [dbo].[Get_StrategyApprovalByUser](
 @i_user VARCHAR(50)

)
AS
BEGIN

SELECT [Id], [RefNumber], [Version], [Approver], [OriginalApprover], [Comments], [ApprovedDate],[CreatedDate], [Status], [ActionStatus], [IsActive], [IsTransfered], [IsDelegateAccepted], [IsViewed], [IsModified], [Type]
 FROM tbl_approvaltransfer  where approver=@i_user and IsActive='Y' and IsDelegateAccepted='Y'
union
 Select 
 [Id], [RefNumber], [Version], [Approver], '' OriginalApprover, [Comments], [ApprovedDate],[CreatedDate], [Status], [ActionStatus], [IsActive], [IsTransfered], [IsDelegateAccepted], [IsViewed], [IsModified], [Type]
 from tbl_strategyapproval  where approver=@i_user and IsActive='Y' and IsTransfered ='N';
 

END;
GO
/****** Object:  StoredProcedure [dbo].[Get_StrategyApprovalById]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_StrategyApprovalById](
 @i_RefNumber VARCHAR(50),
 @i_Version INT
)
AS
BEGIN
SET NOCOUNT ON;
Select Id,Approver,RefNumber,Version,Comments,Status,ApprovedDate,CreatedDate,Uploadedby from tbl_strategyApproval 
where RefNumber=@i_RefNumber and Version=@i_Version;
/*union
 Select 
Id,Approver,RefNumber,Version,Comments,Status,ApprovedDate,CreatedDate
 from tbl_approvaltransfer  where RefNumber=i_RefNumber and Version=i_Version and IsActive='Y';
*/
END;
GO
/****** Object:  StoredProcedure [dbo].[Get_DelegateApprovalByUser]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Get_DelegateApprovalByUser](
 @i_user VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;

 Select  [Id], [RefNumber], [Version], [Approver], '' OriginalApprover, [Comments], [CreatedDate],[ApprovedDate], [Status],  [IsActive], [IsTransfered], [IsDelegateAccepted], [IsViewed], [IsModified], [Type]
 from tbl_strategyapproval  where Approver=@i_user and IsActive='Y' and IsDelegateAccepted ='N';
 

END;
GO
/****** Object:  StoredProcedure [dbo].[delete_userregion]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[delete_userregion](
 @i_userid VARCHAR(250)
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_userregionmapping where Userid=@i_userid;

END;
GO
/****** Object:  StoredProcedure [dbo].[delete_usercountry]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[delete_usercountry](
 @i_userid VARCHAR(250)
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_usercountrymapping where Userid=@i_userid;

END;
GO
/****** Object:  StoredProcedure [dbo].[delete_userBusinessSector]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[delete_userBusinessSector](
 @i_userid VARCHAR(250)
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_userBusinessSectormapping where Userid=@i_userid;

END;
GO
/****** Object:  StoredProcedure [dbo].[delete_RoleRight]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[delete_RoleRight](
 @i_roleid INT
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_roleright_mapping where RoleID=@i_roleid;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_ParentIDmaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_ParentIDmaster
CREATE  PROCEDURE [dbo].[sp_update_ParentIDmaster](
 @i_id INT,
 @i_ParentID VARCHAR(50)

)
AS
BEGIN

IF exists (SELECT * FROM tbl_ParentID_master WHERE ParentID=@i_ParentID) 
 print '1'
 else
 begin

update tbl_ParentID_master set ParentID =@i_ParentID where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_FTAStrategyOwnermaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_update_FTAStrategyOwnermaster](
 @i_id INT,
 @i_FTAStrategyOwner VARCHAR(50)

)
AS
BEGIN

IF exists (SELECT * FROM tbl_FTAStrategyOwner_master WHERE FTAStrategyOwner=@i_FTAStrategyOwner) 
 print '1'
 else
 begin
update tbl_FTAStrategyOwner_master set FTAStrategyOwner =@i_FTAStrategyOwner  where id=@i_id;
END;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_FTAStrategyNamemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_FTAStrategyNamemaster
CREATE  PROCEDURE [dbo].[sp_update_FTAStrategyNamemaster](
 @i_id INT,
 @i_FTAStrategyName VARCHAR(50)
)
AS
BEGIN

IF exists (SELECT * FROM tbl_FTAStrategyName_master WHERE FTAStrategyName=@i_FTAStrategyName) 
 print '1'
 else
 begin
update tbl_FTAStrategyName_master set FTAStrategyName=@i_FTAStrategyName where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_FTAStrategyCodemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_FTAStrategyCodemaster
CREATE  PROCEDURE [dbo].[sp_update_FTAStrategyCodemaster](
 @i_id INT,
 @i_FTAStrategyCode VARCHAR(50)

)
AS
BEGIN

IF exists (SELECT * FROM tbl_FTAStrategyCode_master WHERE FTAStrategyCode=@i_FTAStrategyCode) 
 print '1'
 else
 begin

update tbl_FTAStrategyCode_master set FTAStrategyCode=@i_FTAStrategyCode where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_FTAApplicationNamemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_FTAApplicationNamemaster
CREATE  PROCEDURE [dbo].[sp_update_FTAApplicationNamemaster](
 @i_id INT,
 @i_FTAApplicationName VARCHAR(50)

)
AS
BEGIN

IF exists (SELECT * FROM tbl_FTAApplicationName_master WHERE FTAApplicationName=@i_FTAApplicationName) 
 print '1'
 else
 begin

update tbl_FTAApplicationName_master set FTAApplicationName=@i_FTAApplicationName where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_FTAApplicationCodemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_FTAApplicationCodemaster
CREATE  PROCEDURE [dbo].[sp_update_FTAApplicationCodemaster](
 @i_id INT,
 @i_FTAApplicationCode VARCHAR(50)


)
AS
BEGIN


IF exists (SELECT * FROM tbl_FTAApplicationCode_master WHERE FTAApplicationCode=@i_FTAApplicationCode) 
 print '1'
 else
 begin
update tbl_FTAApplicationCode_master set FTAApplicationCode=@i_FTAApplicationCode where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_DiscretionaryCodemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_DiscretionaryCodemaster
CREATE  PROCEDURE [dbo].[sp_update_DiscretionaryCodemaster](
 @i_id INT,
 @i_DiscretionaryCode VARCHAR(50)


)
AS
BEGIN


IF exists (SELECT * FROM tbl_DiscretionaryCode_master WHERE DiscretionaryCode=@i_DiscretionaryCode) 
 print '1'
 else
 begin
update tbl_DiscretionaryCode_master set DiscretionaryCode=@i_DiscretionaryCode where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_countrymaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_countrymaster
CREATE  PROCEDURE [dbo].[sp_update_countrymaster](
 @i_id INT,
 @i_countryname VARCHAR(50)
)
AS
BEGIN

IF exists (SELECT * FROM tbl_country_master WHERE countryname=@i_countryname) 
 print '1'
 else
 begin
update tbl_country_master set countryname=@i_countryname where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_ChildIDmaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_ChildIDmaster
CREATE  PROCEDURE [dbo].[sp_update_ChildIDmaster](
 @i_id INT,
 @i_ChildID VARCHAR(50)

)
AS
BEGIN

IF exists (SELECT * FROM tbl_ChildID_master  WHERE ChildID=@i_ChildID) 
 print '1'
 else
 begin
update tbl_ChildID_master set ChildID =@i_ChildID where id=@i_id;
end;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_Capacitymaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_Capacitymaster
CREATE  PROCEDURE [dbo].[sp_update_Capacitymaster](
 @i_id INT,
 @i_Capacity VARCHAR(50),
 @i_Capacitycode VARCHAR(50)
)
AS
BEGIN

IF exists (SELECT * FROM tbl_Capacity_master  WHERE Capacity=@i_Capacity) 
 print '1'
 else
 begin

update tbl_Capacity_master set Capacity =@i_Capacity,Capacitycode=@i_Capacitycode  where id=@i_id;

END;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_BusinessSuffixmaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_BusinessSuffixmaster
CREATE  PROCEDURE [dbo].[sp_update_BusinessSuffixmaster](
 @i_id INT,
 @i_BusinessSuffix VARCHAR(50)

)
AS
BEGIN



IF exists (SELECT * FROM tbl_BusinessSuffix_master  WHERE BusinessSuffix=@i_BusinessSuffix) 
 print '1'
 else
 begin
update tbl_BusinessSuffix_master set BusinessSuffix =@i_BusinessSuffix where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_BusinessLinemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_BusinessLinemaster
CREATE  PROCEDURE [dbo].[sp_update_BusinessLinemaster](
 @i_id INT,
 @i_BusinessLine VARCHAR(50)

)
AS
BEGIN


IF exists (SELECT * FROM tbl_BusinessLine_master  WHERE BusinessLine=@i_BusinessLine) 
 print '1'
 else
 begin

update tbl_BusinessLine_master set BusinessLine=@i_BusinessLine  where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_Business]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_Business
CREATE  PROCEDURE [dbo].[sp_update_Business](
 @i_id INT,
 @i_Business VARCHAR(50)


)
AS
BEGIN


IF exists (SELECT * FROM tbl_Business_master  WHERE Business=@i_Business) 
 print '1'
 else
 begin
update tbl_Business_master set Business =@i_Business  where id=@i_id;
end;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_Applicationmaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_Applicationmaster
CREATE  PROCEDURE [dbo].[sp_update_Applicationmaster](
 @i_id INT,
 @i_ApplicationId VARCHAR(50),
 @i_ApplicationName VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;

update tbl_ApplicationMaster set ApplicationName=@i_ApplicationName , ApplicationId=@i_ApplicationId where id=@i_id;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_ApplicationCategorymaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_ApplicationCategorymaster
CREATE  PROCEDURE [dbo].[sp_update_ApplicationCategorymaster](
 @i_id INT,
 @i_ApplicationCategory VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;

update tbl_ApplicationCategory_master set ApplicationCategory=@i_ApplicationCategory where id=@i_id;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_Venuetype]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_Venuetype](
	@i_Venuetype VARCHAR(50),
	@i_Venuetypecode VARCHAR(50)

)as
BEGIN

insert into tbl_Venuetype_master (Venuetype,VenueTypecode) values(@i_Venuetype,@i_Venuetypecode);

END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_userregion]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_userregion](
	@i_userid VARCHAR(250),
	@i_RegionId VARCHAR(250)
)as
BEGIN
insert into tbl_userregionmapping (Userid,RegionId) values(@i_userid,@i_RegionId);
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_usercountry]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_usercountry](
	@i_userid VARCHAR(250),
	@i_CountryId VARCHAR(250)
)as
BEGIN
insert into tbl_usercountrymapping (Userid,CountryId) values(@i_userid,@i_CountryId);
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_userBusinessSector]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_userBusinessSector](
	@i_userid VARCHAR(250),
	@i_BusinessSectorId VARCHAR(250)
)as
BEGIN
insert into tbl_userBusinessSectormapping (Userid,BusinessSectorId) values(@i_userid,@i_BusinessSectorId);
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_strategyVersionLog]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_strategyVersionLog](
	@i_RefNumber VARCHAR(50),
	@i_Version VARCHAR(50),
	@i_ChangeDesc VARCHAR(2000),
	@i_Createdby VARCHAR(500)
)
as
BEGIN

insert into tbl_strategyVersionLog (RefNumber,Version,ChangeDesc,Createdby) values(@i_RefNumber,@i_Version,@i_ChangeDesc,@i_Createdby);

END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_Strategytype]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_Strategytype](
	@i_Strategytype VARCHAR(50),
		@i_Strategytypecode VARCHAR(50)
)as
BEGIN


IF exists (SELECT * FROM tbl_Strategytype_master  WHERE Strategytype=@i_Strategytype) 
 print '1'
 else
 begin

insert into tbl_Strategytype_master (Strategytype,StrategyTypecode) values(@i_Strategytype,@i_Strategytypecode);
end
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_strategy_Approval]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_strategy_Approval](
	@i_RefNumber VARCHAR(50),
	@i_Version VARCHAR(50),
	@i_systemfile VARCHAR(500)
,
	@i_OrignalFile VARCHAR(500),
	@i_status VARCHAR(5)
,
	@I_uploadedby VARCHAR(500)

)
as
BEGIN

INSERT INTO tbl_StrategyApproval (RefNumber, Version,Approver,Comments,Status,Uploadedby) VALUES (@i_RefNumber, @i_Version,@i_systemfile,@i_OrignalFile,@i_status,@I_uploadedby);

END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_Strategy]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_Strategy](
 @i_RefNumber VARCHAR(50),
 @i_CountryId VARCHAR(1000),
 @i_RegionId VARCHAR(50),
 @i_Description VARCHAR(500)=null,
 @i_FTAApplicationCodeId VARCHAR(50),
 @i_BusinessSuffixId VARCHAR(50),
 @i_ChildID VARCHAR(50),
 @i_FTAStrategyNameId VARCHAR(50),
 @i_StrategytypeId VARCHAR(50)=null,
 @i_GOLiveDate VARCHAR(50)=null,
 @i_FTAStrategyCodeId VARCHAR(50),
 @i_FTAShortCode VARCHAR(50),
 @i_BusinessLineId VARCHAR(50),
 @i_FTAApplicationNameId VARCHAR(50),
 @i_FTAStrategyOwnerId VARCHAR(50),
 @i_ApplicationCategoryId VARCHAR(50),
 @i_DecommissionedDate VARCHAR(50),
 @i_DiscretionaryCodeId VARCHAR(50),
 @i_ParentID VARCHAR(50),
 @i_FTAApplicationOwnerId VARCHAR(50),
 @i_PriorityScore VARCHAR(50),
 @i_Priority VARCHAR(50),
 @i_CapacityId VARCHAR(50),
 @i_VenueTypeId VARCHAR(50),
 @i_Version VARCHAR(50),
 @i_ThirdPartyAppId VARCHAR(50)  ,
 @i_BusinessId VARCHAR(50),
 @i_FTAApplicationMappingId VARCHAR(50)    ,
 @i_FTAStrategyMappingId VARCHAR(50) ,
 @i_BusinessMappingId VARCHAR(50),
 @i_SeniorManagementFunction VARCHAR(1500),
 @i_LTALongCode VARCHAR(1500),
 @i_SignOff VARCHAR(50) =null ,
 @i_CountryIdList VARCHAR(100)  ,
 @i_CountryNameList VARCHAR(500),
 @i_StatusId VARCHAR(50),
 @i_CreatedBy VARCHAR(500)=null,
 @i_OutParam VARCHAR(500) OUTPUT
)
AS
BEGIN
 IF exists (SELECT Id FROM tbl_strategy  WHERE FTAShortCodeId=@i_FTAShortCode and Version=@i_Version) 
 begin
 set @i_OutParam ='Strategy Short code already exists';
 end
 Else IF exists (SELECT Id FROM tbl_strategy  WHERE FTAShortCodeId=@i_LTALongCode and Version=@i_Version) 
 begin
 set @i_OutParam ='Strategy Long code already exists';
 end
 else begin
 begin
 
 update tbl_strategy set isactive ='N' where FTAShortCodeId =@i_FTAShortCode;
 insert into tbl_strategy(RefNumber,    CountryId, RegionId,  Description,   FTAApplicationCodeId,        BusinessSuffixId,        ChildID,
        FTAStrategyNameId,StrategytypeId,GOLiveDate,FTAStrategyCodeId,FTAShortCodeId,
        BusinessLineId,FTAApplicationNameId,FTAStrategyOwnerId,ApplicationCategoryId,VenuetypeId,
        DeComissionedDate,DiscretionaryCodeId,ParentID,FTAApplicationOwnerId,PriorityScore,Priority,
        CapacityId,CountryIdList,CountryNameList,IsActive,Version,ThirdPartyAppId,BusinessId,FTAApplicationMappingId,
		  FTAStrategyMappingId,BusinessMappingId,SignOff,CreatedBy,LTALongCode,SeniorManagementFunction,StatusId
		  ) values(@i_RefNumber,@i_CountryId,
 @i_RegionId,@i_Description,@i_FTAApplicationCodeId,@i_BusinessSuffixId,@i_ChildID,@i_FTAStrategyNameId,@i_StrategytypeId,
@i_GOLiveDate,@i_FTAStrategyCodeId,@i_FTAShortCode,@i_BusinessLineId,@i_FTAApplicationNameId,@i_FTAStrategyOwnerId,
@i_ApplicationCategoryId,@i_VenueTypeId,@i_DecommissionedDate,@i_DiscretionaryCodeId,@i_ParentID,@i_FTAApplicationOwnerId,@i_PriorityScore,
@i_Priority,@i_CapacityId,@i_CountryIdList,@i_CountryNameList, 'Y',@i_Version,@i_ThirdPartyAppId,@i_BusinessId,@i_FTAApplicationMappingId,@i_FTAStrategyMappingId,@i_BusinessMappingId,
@i_SignOff,@i_CreatedBy,@i_LTALongCode,@i_SeniorManagementFunction,@i_StatusId);
set @i_OutParam ='success';
end;
ENd 
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_roleright]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_roleright](
	@i_RoleId INT,
	@i_RightId INT

)as
BEGIN
insert into tbl_roleright_mapping (RoleId,RightId) values(@i_RoleId,@i_RightId);
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_role]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_role](
 @i_role VARCHAR(50),
 @param_auto_id INT OUT
)
AS
BEGIN
insert into tbl_role_master (RoleName) values(@i_role);
  set  @param_auto_id = @@IDENTITY ;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_Region]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_Region](
 @i_RegionName VARCHAR(50)


)
AS
BEGIN


IF exists (SELECT * FROM tbl_region_master  WHERE regionname=@i_RegionName) 
 print '1'
 else
 begin


insert into tbl_region_master (regionname) values(@i_RegionName);
END;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_ParentID]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_ParentID](
	@i_ParentID VARCHAR(50)
)
as
BEGIN


IF exists (SELECT * FROM tbl_ParentID_master  WHERE ParentID=@i_ParentID) 
 print '1'
 else
 begin


insert into tbl_ParentID_master (ParentID) values(@i_ParentID);
END
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_FTAStrategyName]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_FTAStrategyName](
	@i_FTAStrategyName VARCHAR(50)


)
as
BEGIN


IF exists (SELECT * FROM tbl_FTAStrategyName_master  WHERE FTAStrategyName=@i_FTAStrategyName) 
 print '1'
 else
 begin
insert into tbl_FTAStrategyName_master (FTAStrategyName) values(@i_FTAStrategyName);
end
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_FTAStrategyCode]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_FTAStrategyCode](
 @i_FTAStrategyCode VARCHAR(50)


)
AS
BEGIN


IF exists (SELECT * FROM tbl_FTAStrategyCode_master  WHERE FTAStrategyCode=@i_FTAStrategyCode) 
 print '1'
 else
 begin
insert into tbl_FTAStrategyCode_master (FTAStrategyCode) values(@i_FTAStrategyCode);
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_FTAApplicationName]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_insert_FTAApplicationName
CREATE  PROCEDURE [dbo].[sp_insert_FTAApplicationName](
 @i_FTAApplicationName VARCHAR(50)

)
AS
BEGIN


IF exists (SELECT * FROM tbl_FTAApplicationName_master  WHERE FTAApplicationName=@i_FTAApplicationName) 
 print '1'
 else
 begin
insert into tbl_FTAApplicationName_master (FTAApplicationName) values(@i_FTAApplicationName);
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_FTAApplicationCode]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_FTAApplicationCode](
 @i_FTAApplicationCode VARCHAR(50)


)
AS
BEGIN

IF exists (SELECT * FROM tbl_FTAApplicationCode_master  WHERE FTAApplicationCode=@i_FTAApplicationCode) 
 print '1'
 else
 begin
insert into tbl_FTAApplicationCode_master (FTAApplicationCode) values(@i_FTAApplicationCode);
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_DiscretionaryCode]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_DiscretionaryCode](
 @i_DiscretionaryCode VARCHAR(50)


)
AS
BEGIN
IF exists (SELECT * FROM tbl_DiscretionaryCode_master WHERE DiscretionaryCode=@i_DiscretionaryCode) 
 print '1'
 else
 begin

insert into tbl_DiscretionaryCode_master (DiscretionaryCode) values(@i_DiscretionaryCode);
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_Country]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_Country](
	@i_CountryName VARCHAR(50)

)
as
BEGIN

IF exists (SELECT * FROM tbl_country_master WHERE Countryname=@i_CountryName) 
 print '1'
 else
 begin

insert into tbl_country_master (Countryname) values(@i_CountryName);
end
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_ChildID]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_ChildID](
 @i_ChildID VARCHAR(50)


)
AS
BEGIN
SET NOCOUNT ON;


IF exists (SELECT * FROM tbl_ChildID_master WHERE ChildID=@i_ChildID) 
 print '1'
 else
 begin

insert into tbl_ChildID_master (ChildID) values(@i_ChildID);

END



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_Capacity]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_Capacity](
	@i_Capacity VARCHAR(50),
	@i_Capacitycode VARCHAR(50)
)as
BEGIN

IF exists (SELECT * FROM tbl_Capacity_master WHERE Capacity=@i_Capacity) 
 print '1'
 else
 begin
insert into tbl_Capacity_master (Capacity,Capacitycode) values(@i_Capacity,@i_Capacitycode);

END
END
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_BusinessSuffix]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_BusinessSuffix](
 @i_BusinessSuffix VARCHAR(50)


)
AS
BEGIN
SET NOCOUNT ON;

insert into tbl_BusinessSuffix_master (BusinessSuffix) values(@i_BusinessSuffix);

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_BusinessLine]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_BusinessLine](
 @i_BusinessLine VARCHAR(50)


)
AS
BEGIN

IF exists (SELECT * FROM tbl_BusinessLine_master WHERE BusinessLine=@i_BusinessLine) 
 print '1'
 else
 begin
insert into tbl_BusinessLine_master (BusinessLine) values(@i_BusinessLine);
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_Business]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_insert_Business](
 @i_Business VARCHAR(50)
)
AS
BEGIN

IF exists (SELECT * FROM tbl_Business_master WHERE Business=@i_Business) 
 print '1'
 else
 begin
insert into tbl_Business_master (Business) values(@i_Business);
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_insert_ApplicationCategory]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_insert_ApplicationCategory](
	@i_ApplicationCategory VARCHAR(50)


)
as
BEGIN
 IF exists (SELECT * FROM tbl_ApplicationCategory_master WHERE ApplicationCategory=@i_ApplicationCategory) 
 print '1'
 else
 begin

insert into tbl_ApplicationCategory_master (ApplicationCategory) values(@i_ApplicationCategory);
end
END
GO
/****** Object:  StoredProcedure [dbo].[sp_getusersbycondition]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getusersbycondition
CREATE  PROCEDURE [dbo].[sp_getusersbycondition](
 @i_regionId VARCHAR(50),
 @i_businesssectorId VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;
select u.Id,u.Userid,u.UserName,u.EmailId,u.RegionId,r.RegionName,u.BusinessSectorId,
b.BusinessLine,u.RoleId,rm.RoleName,u.Status from tbl_user_master u 
Join tbl_userbusinesssectormapping ubu on ubu.userid=u.Userid
Join tbl_userregionmapping ur on ur.userid=u.Userid
join tbl_businessline_master b on ubu.BusinessSectorId=b.Id 
join tbl_region_master r  on ur.RegionId=r.Id join tbl_role_master rm on u.RoleId=rm.Id  
where ur.RegionId=@i_regionId and ubu.BusinessSectorId=@i_businesssectorId and U.userid!='NA';

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getusers]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getusers](
 @i_userid VARCHAR(50)
)
AS
BEGIN
if(@i_userid ='') begin
select u.Id,u.Userid,u.UserName,u.EmailId,u.RoleId,rm.RoleName,u.Status,u.Password,u.IsADUser from tbl_user_master u join tbl_role_master rm on u.RoleId=rm.Id where u.Status !='NA';

end
else if(@i_userid ='NA') begin
select u.Id,u.Userid,u.UserName,u.EmailId,u.RoleId,rm.RoleName,u.Status,u.Password,u.IsADUser from tbl_user_master u join tbl_role_master rm on u.RoleId=rm.Id;
end
else begin
select u.Id,u.Userid,u.UserName,u.EmailId,u.RoleId,rm.RoleName,u.Status,u.Password,u.IsADUser from tbl_user_master u 
join tbl_role_master rm on u.RoleId=rm.Id  where u.userid=@i_userid and u.Status !='NA';
end 


END;
GO
/****** Object:  StoredProcedure [dbo].[SP_Getuserregion]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.SP_Getuserregion
CREATE  PROCEDURE [dbo].[SP_Getuserregion](
 @i_userid VARCHAR(250)
)
AS
BEGIN
SET NOCOUNT ON;
select r.Id,r.RegionName from tbl_userregionmapping rm join tbl_region_master r on rm.RegionId = r.Id where Userid=@i_userid;
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_Getusercountry]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.SP_Getusercountry
CREATE  PROCEDURE [dbo].[SP_Getusercountry](
 @i_userid VARCHAR(250)
)
AS
BEGIN
SET NOCOUNT ON;
select c.id,c.CountryName from tbl_usercountrymapping uc join tbl_country_master c on uc.CountryId = c.id where Userid=@i_userid;
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_GetuserBusinessSector]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.SP_GetuserBusinessSector
CREATE  PROCEDURE [dbo].[SP_GetuserBusinessSector](
 @i_userid VARCHAR(250)


)
AS
BEGIN
SET NOCOUNT ON;
select b.Id,b.BusinessLine from tbl_userBusinessSectormapping bs join tbl_businessLine_master b  on bs.BusinessSectorId =b.Id where Userid=@i_userid;
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_GetStrategyByRefnumber]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.SP_GetStrategyByRefnumber
CREATE  PROCEDURE [dbo].[SP_GetStrategyByRefnumber](
 @i_RefNumber VARCHAR(50)




)
AS
BEGIN
SET NOCOUNT ON;

select S.Id, RefNumber, S.Name, Type, S.ApplicationId,A.ApplicationID as AppId,A.ApplicationName,S.ApplicationId, S.BusinessSector,B.Name  as BusinessSectorName, S.Country , C.CountryName, S.Region,R.RegionName, S.ProductType ,P.ProductType as ProductTypeName, Ranking, Objective, Description, RiskRating, BusinessImpact, ExchangeDetails, DetailsOfChanges, ChangesBusinessImpact, SupportingDocument, DateChangeInitiated, DateChangeImplemented, ChangesCompletionStatus, AdditionalParam1, AdditionalParam2, AdditionalParam3, AdditionalParam4, AdditionalParam5, AdditionalParam6, AdditionalParam7, AdditionalParam8, AdditionalParam9, AdditionalParam10, AdditionalParam11, AdditionalParam12, AdditionalParam13, Attribute1, Attribute2, Attribute3, Attribute4, NoOfApprover, Version,FinalSignOff, SignOffDate, SignoffBy, IsActive, CreatedDate, CreatedBy, LastModifiedDate, LastModifiedBy
from tbl_strategy S join tbl_ApplicationMaster A  On S.ApplicationId=A.Id 
JOin tbl_country_master C on S.Country=C.id 
join tbl_region_master R on S.Region= R.Id
Join tbl_businesssector	B on S.BusinessSector =B.Id
JOIN tbl_producttypemaster P on S.ProductType=P.Id
WHERE RefNumber=i_RefNumber;
END;
GO
/****** Object:  StoredProcedure [dbo].[Sp_getRolesbyuserassigned]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.Sp_getRolesbyuserassigned
CREATE  PROCEDURE [dbo].[Sp_getRolesbyuserassigned](
 @i_roleid VARCHAR(50)

)
AS
BEGIN
select u.Userid,u.UserName,u.EmailId,u.RegionId,r.RegionName,u.CountryId,c.CountryName,u.BusinessSectorId,b.Name,u.RoleId,rm.RoleName,u.Status from tbl_user_master u join tbl_businesssector b on u.BusinessSectorId=b.Id join tbl_region_master r  on u.RegionId=r.Id join tbl_country_master c  on u.CountryId=c.id join tbl_role_master rm on u.RoleId=rm.Id
where u.RoleId=@i_roleid;

END;
GO
/****** Object:  StoredProcedure [dbo].[Sp_GetRoles]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.Sp_GetRoles
CREATE  PROCEDURE [dbo].[Sp_GetRoles](
 @i_roleId VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;

if(@i_roleId !='') begin
select * from tbl_Role_Master where Id=@i_roleId;
end
else begin
select * from tbl_Role_Master ;
End 

END;
GO
/****** Object:  StoredProcedure [dbo].[SP_GetRoleRights]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.SP_GetRoleRights
CREATE  PROCEDURE [dbo].[SP_GetRoleRights](
 @i_roleId INT
)
AS
BEGIN
SET NOCOUNT ON;
select * from tbl_roleright_mapping where roleId=@i_roleId;
END;
GO
/****** Object:  StoredProcedure [dbo].[Sp_GetRights]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.Sp_GetRights
CREATE  PROCEDURE [dbo].[Sp_GetRights](
 @i_roleid VARCHAR(50)



)
AS
BEGIN
SET NOCOUNT ON;

if(@i_roleid!='') begin
Select * from tbl_right_master where RightId=@i_roleid  and Isactive='Y';
end
else begin
Select * from tbl_right_master where  Isactive='Y';
end 
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_GetRightForUser]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.SP_GetRightForUser
CREATE  PROCEDURE [dbo].[SP_GetRightForUser](
 @i_userid VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;

select distinct RightName, Path from TBL_RIGHT_MASTER RM inner join TBL_ROLERIGHT_MAPPING RR on
 RM.RightID=RR.RightID inner join TBL_USER_MASTER UM on RR.RoleID=UM.RoleId where UM.Userid = @i_userid;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getReportApplicationMappingFilter]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_getReportApplicationMappingFilter](
	@i_Id VARCHAR(50)=null
)
as
BEGIN
 select FAM.Id, FAM.FTAApplicationNameId,FANM.FTAApplicationName,FAM.FTAApplicationCodeId,FACM.FTAApplicationCode,
 FAM.ChildId,CM.ChildID as ChildIDValue, FAM.ThirdPartyAppId,TM.ThirdPartyAppName,
 FAM.ParentID as ParentIDValue,PM.ParentId, FAM.ApplicationOwnerId ,FAM.ApplicationCategoryId,AM.ApplicationCategory,
 FAM.BusinessLineId,BM.BusinessLine
 ,FAM.RegionId,R.RegionName,FAM.CountryId,C.CountryName
  from tbl_reportapplicationmapping FAM 
 join tbl_ftaapplicationname_master FANM on FAM.FTAApplicationNameId=FANM.Id
 join tbl_ftaapplicationcode_master FACM on FAM.FTAApplicationCodeId=FACM.Id
 join tbl_childid_master CM on FAM.ChildId=CM.Id
 join tbl_thirdpartyapplication TM on FAM.ThirdPartyAppId=TM.Id
 join tbl_user_master UM on UM.Userid=FAM.ApplicationOwnerId
 join tbl_parentId_master PM on PM.Id=FAM.ParentId
 join tbl_applicationcategory_Master AM on AM.Id =FAM.ApplicationCategoryId
 join tbl_businessline_master BM on bm.Id=FAM.BusinessLineId
 JOIN tbl_region_master R on R.Id=FAM.RegionId
 JOIN tbl_country_master C on C.id=FAM.CountryId
 where FAM.FTAApplicationNameId=@i_id;
end
GO
/****** Object:  StoredProcedure [dbo].[sp_getReportApplicationMapping]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_getReportApplicationMapping](
	@i_Id VARCHAR(50)=null
)
as
BEGIN
if(@i_Id !='') 
 select FAM.Id, FAM.FTAApplicationNameId,FANM.FTAApplicationName,FAM.FTAApplicationCodeId,FACM.FTAApplicationCode,
 FAM.ChildId,CM.ChildID as ChildIDValue, FAM.ThirdPartyAppId,TM.ThirdPartyAppName,
 FAM.ParentID as ParentIDValue,PM.ParentId, FAM.ApplicationOwnerId ,FAM.ApplicationCategoryId,AM.ApplicationCategory 
 ,FAM.BusinessLineId,BM.BusinessLine
  from tbl_reportapplicationmapping FAM 
 join tbl_ftaapplicationname_master FANM on FAM.FTAApplicationNameId=FANM.Id
 join tbl_ftaapplicationcode_master FACM on FAM.FTAApplicationCodeId=FACM.Id
 join tbl_childid_master CM on FAM.ChildId=CM.Id
 join tbl_thirdpartyapplication TM on FAM.ThirdPartyAppId=TM.Id
 join tbl_user_master UM on UM.Userid=FAM.ApplicationOwnerId
 join tbl_parentId_master PM on PM.Id=FAM.ParentId
 join tbl_applicationcategory_Master AM on AM.Id =FAM.ApplicationCategoryId
 join tbl_businessline_master BM on bm.Id=FAM.BusinessLineId
 where FAM.Id=@i_id;
else
 select FAM.Id, FAM.FTAApplicationNameId,FANM.FTAApplicationName,FAM.FTAApplicationCodeId,FACM.FTAApplicationCode,
 FAM.ChildId,CM.ChildID as ChildIDValue, FAM.ThirdPartyAppId,TM.ThirdPartyAppName,
  FAM.ParentID as ParentIDValue,PM.ParentId, FAM.ApplicationOwnerId ,FAM.ApplicationCategoryId,AM.ApplicationCategory,
  FAM.BusinessLineId,BM.BusinessLine
  ,FAM.RegionId,R.RegionName,FAM.CountryId,C.CountryName
  from tbl_reportapplicationmapping FAM 
 join tbl_ftaapplicationname_master FANM on FAM.FTAApplicationNameId=FANM.Id
 join tbl_ftaapplicationcode_master FACM on FAM.FTAApplicationCodeId=FACM.Id
 join tbl_childid_master CM on FAM.ChildId=CM.Id
 join tbl_thirdpartyapplication TM on FAM.ThirdPartyAppId=TM.Id
  join tbl_user_master UM on UM.Userid=FAM.ApplicationOwnerId
 join tbl_parentId_master PM on PM.Id=FAM.ParentId
 join tbl_applicationcategory_Master AM on AM.Id =FAM.ApplicationCategoryId
 join tbl_businessline_master BM on bm.Id=FAM.BusinessLineId
 JOIN tbl_region_master R on R.Id=FAM.RegionId
 JOIN tbl_country_master C on C.id=FAM.CountryId;
end
GO
/****** Object:  StoredProcedure [dbo].[sp_getmenuforuser]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getmenuforuser
CREATE  PROCEDURE [dbo].[sp_getmenuforuser](
 @i_UserId VARCHAR(50)


)
AS
BEGIN
SET NOCOUNT ON;
select distinct MenuName, Path, RM.RightID, RM.ShowMenu, RM.Icon from TBL_RIGHT_MASTER RM inner join TBL_ROLERIGHT_MAPPING RR on RM.RightID=RR.RightID inner join TBL_USER_MASTER UM on RR.RoleID=UM.RoleId where UM.Userid = @i_UserId and RM.IsActive='Y' order by RM.RightID;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getFTAStrategyMappingbyId]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getFTAStrategyMappingbyId
CREATE  PROCEDURE [dbo].[sp_getFTAStrategyMappingbyId](
 @i_Id INT

)
AS
BEGIN
SET NOCOUNT ON;
select FSM.Id, FSM.FTAStrategyNameId, FSN.FTAStrategyName, FSM.FTAStrategyCodeId,FSC.FTAStrategyCode from tbl_ftastrategynamemapping FSM join tbl_ftastrategyname_master FSN on FSM.FTAStrategyNameId=FSN.Id
JOIN tbl_ftastrategycode_master FSC on  FSM.FTAStrategyCodeId = FSC.Id
 where FSM.FTAStrategyNameId=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getFTAStrategyMapping]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getFTAStrategyMapping
CREATE  PROCEDURE [dbo].[sp_getFTAStrategyMapping](
 @i_id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;
if(@i_Id !='') begin
select FSM.Id, FSM.FTAStrategyNameId, FSN.FTAStrategyName, FSM.FTAStrategyCodeId,FSC.FTAStrategyCode from tbl_ftastrategynamemapping FSM join tbl_ftastrategyname_master FSN on FSM.FTAStrategyNameId=FSN.Id
JOIN tbl_ftastrategycode_master FSC on  FSM.FTAStrategyCodeId = FSC.Id
 where FSM.Id=@i_id;
end
else begin
select FSM.Id, FSM.FTAStrategyNameId, FSN.FTAStrategyName, FSM.FTAStrategyCodeId,FSC.FTAStrategyCode from tbl_ftastrategynamemapping FSM join tbl_ftastrategyname_master FSN on FSM.FTAStrategyNameId=FSN.Id
JOIN tbl_ftastrategycode_master FSC on  FSM.FTAStrategyCodeId = FSC.Id;
end 

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getFTAApplicationMappingbyId]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getFTAApplicationMappingbyId
CREATE  PROCEDURE [dbo].[sp_getFTAApplicationMappingbyId]
(
 @i_Id INT
)
AS
BEGIN
--if(@i_Id =null)

select FAM.Id, FAM.FTAApplicationNameId,FANM.FTAApplicationName,FAM.FTAApplicationCodeId,FACM.FTAApplicationCode,
 FAM.ChildId,CM.ChildID as ChildIDValue, FAM.ThirdPartyAppId,TM.ThirdPartyAppName, FAM.ParentID as ParentIDValue,PM.ParentId,
  FAM.ApplicationOwnerId ,FAM.ApplicationCategoryId,AM.ApplicationCategory 
  from tbl_ftaapplicationmapping FAM 
 join tbl_ftaapplicationname_master FANM on FAM.FTAApplicationNameId=FANM.Id
 join tbl_ftaapplicationcode_master FACM on FAM.FTAApplicationCodeId=FACM.Id
 join tbl_childid_master CM on FAM.ChildId=CM.Id
 join tbl_thirdpartyapplication TM on FAM.ThirdPartyAppId=TM.Id
 join tbl_user_master UM on UM.Userid=FAM.ApplicationOwnerId
 join tbl_parentId_master PM on PM.Id=FAM.ParentId
 join tbl_applicationcategory_Master AM on AM.Id =FAM.ApplicationCategoryId
 where FAM.FTAApplicationNameId=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getFTAApplicationMapping]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_getFTAApplicationMapping](
	@i_Id VARCHAR(50)=null
)
as
BEGIN
if(@i_Id !='') 
 select FAM.Id, FAM.FTAApplicationNameId,FANM.FTAApplicationName,FAM.FTAApplicationCodeId,FACM.FTAApplicationCode,
 FAM.ChildId,CM.ChildID as ChildIDValue, FAM.ThirdPartyAppId,TM.ThirdPartyAppName,
 FAM.ParentID as ParentIDValue,PM.ParentId, FAM.ApplicationOwnerId ,FAM.ApplicationCategoryId,AM.ApplicationCategory 
  from tbl_ftaapplicationmapping FAM 
 join tbl_ftaapplicationname_master FANM on FAM.FTAApplicationNameId=FANM.Id
 join tbl_ftaapplicationcode_master FACM on FAM.FTAApplicationCodeId=FACM.Id
 join tbl_childid_master CM on FAM.ChildId=CM.Id
 join tbl_thirdpartyapplication TM on FAM.ThirdPartyAppId=TM.Id
 join tbl_user_master UM on UM.Userid=FAM.ApplicationOwnerId
 join tbl_parentId_master PM on PM.Id=FAM.ParentId
 join tbl_applicationcategory_Master AM on AM.Id =FAM.ApplicationCategoryId
 where FAM.Id=@i_id;
else
 select FAM.Id, FAM.FTAApplicationNameId,FANM.FTAApplicationName,FAM.FTAApplicationCodeId,FACM.FTAApplicationCode,
 FAM.ChildId,CM.ChildID as ChildIDValue, FAM.ThirdPartyAppId,TM.ThirdPartyAppName,
  FAM.ParentID as ParentIDValue,PM.ParentId, FAM.ApplicationOwnerId ,FAM.ApplicationCategoryId,AM.ApplicationCategory
  from tbl_ftaapplicationmapping FAM 
 join tbl_ftaapplicationname_master FANM on FAM.FTAApplicationNameId=FANM.Id
 join tbl_ftaapplicationcode_master FACM on FAM.FTAApplicationCodeId=FACM.Id
 join tbl_childid_master CM on FAM.ChildId=CM.Id
 join tbl_thirdpartyapplication TM on FAM.ThirdPartyAppId=TM.Id
  join tbl_user_master UM on UM.Userid=FAM.ApplicationOwnerId
 join tbl_parentId_master PM on PM.Id=FAM.ParentId
 join tbl_applicationcategory_Master AM on AM.Id =FAM.ApplicationCategoryId;
end
GO
/****** Object:  StoredProcedure [dbo].[sp_getbusinessmappingbyId]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getbusinessmappingbyId
CREATE  PROCEDURE [dbo].[sp_getbusinessmappingbyId](
 @i_Id INT

)
AS
BEGIN
SET NOCOUNT ON;
select bm.Id, bm.BusinessId,b.business,bm.BusinessSuffixId,bs.BusinessSuffix from tbl_businessmapping bm join tbl_business_master b on bm.BusinessId =b.Id
 join tbl_businesssuffix_master bs on bm.BusinessSuffixId =bs.Id
 where bm.BusinessId=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getbusinessmapping]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getbusinessmapping
CREATE  PROCEDURE [dbo].[sp_getbusinessmapping](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;
if(@i_Id !='') begin
 select bm.Id, bm.BusinessId,b.business,bm.BusinessSuffixId,bs.BusinessSuffix from tbl_businessmapping bm join tbl_business_master b on bm.BusinessId =b.Id
 join tbl_businesssuffix_master bs on bm.BusinessSuffixId =bs.Id
 where bm.Id=@i_id;
end
else begin
 select bm.Id, bm.BusinessId,b.business,bm.BusinessSuffixId,bs.BusinessSuffix from tbl_businessmapping bm join tbl_business_master b on bm.BusinessId =b.Id
 join tbl_businesssuffix_master bs on bm.BusinessSuffixId =bs.Id;
end 
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallVenuetype]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallVenuetype
CREATE  PROCEDURE [dbo].[sp_getallVenuetype](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_Venuetype_master where Id=@i_id;
end
else begin
select * from tbl_Venuetype_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getAllThirdPartyAppType]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getAllThirdPartyAppType
CREATE  PROCEDURE [dbo].[sp_getAllThirdPartyAppType](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;
select * from tbl_thirdpartyapplication;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallStrategytype]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallStrategytype
CREATE  PROCEDURE [dbo].[sp_getallStrategytype](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_Strategytype_master where Id=@i_id;
end
else begin
select * from tbl_Strategytype_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallStrategyStatus]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallVenuetype
create PROCEDURE [dbo].[sp_getallStrategyStatus](
 @i_Id VARCHAR(50)
)
AS
BEGIN
if(@i_Id !='') begin
select * from tbl_StrategyStatus where Id=@i_id;
end
else begin
select * from tbl_StrategyStatus;
end 
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_GetAllStrategybyId]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_GetAllStrategybyId](
@i_RefNumber varchar(100)
)
AS
BEGIN

select S.Id,S.RefNumber,FTAApplicationCodeId,FTAAC.FTAApplicationCode,FTAShortCodeId,CountryIdList,CountryNameList,FTAStrategyCodeId,FTASC.FTAStrategyCode,DiscretionaryCodeId,DM.Discretionarycode,BusinessSuffixId,BSFM.BusinessSuffix,
FTAStrategyCode,S.ParentId,PM.ParentId as ParentIdValue,S.ChildId,cM.ChildID as ChildIdValue,BusinessLineId,BSL.BusinessLine,RegionId,R.RegionName,CountryId,FTAApplicationNameId,APN.FTAApplicationName,FTAApplicationOwnerId,ApplicationCategoryId,
ACM.ApplicationCategory,StrategyTypeId,STM.StrategyType,VenueTypeId,VTM.VenueType,CapacityId,CPM.Capacity,CreatedBy,CreatedDate,Description,S.IsActive,LastModifiedBy,LastModifiedDate,NoOfApprover,Version,FTAStrategyNameId,FTASN.FTAStrategyName,
S.FTAStrategyOwnerId,S.Priority,S.PriorityScore, SignOff,SignOffDate,SignoffBy,LastModifiedDate ,LastModifiedBy,ThirdPartyAppId,TM.ThirdPartyAppName,BusinessId,BM.business,FTAApplicationMappingId,FTAStrategyMappingId,BusinessMappingId,
S.StatusId,Ss.StatusName,
convert(NVARCHAR, S.DecomissionedDate, 103) DecomissionedDate,convert(NVARCHAR, S.GoLiveDate, 103) GoLiveDate,SeniorManagementFunction,LTALongCode from tbl_strategy S join tbl_ftaapplicationcode_master FTAAC On S.FTAApplicationCodeId = FTAAC.Id 
join tbl_ftastrategycode_master FTASC on S.FTAStrategyCodeId = FTASC.Id JOin tbl_discretionarycode_master DM on s.DiscretionaryCodeId = DM.Id JOin tbl_businesssuffix_master BSFM on s.BusinessSuffixId = BSFM.Id 
JOIN tbl_parentid_master PM on s.ParentId = PM.Id join tbl_childid_master CM on S.ChildId = CM.Id JOIn tbl_businessline_master BSL on BusinessLineId = BSL.Id  JOIN tbl_region_master R on S.RegionId = R.id JOIN 
tbl_ftaapplicationname_master APN on S.FTAApplicationNameId = APN.Id JOIN tbl_applicationcategory_master ACM on S.ApplicationCategoryId = ACM.Id JOIN tbl_ftastrategyname_master FTASN on S.FTAStrategyNameId = FTASN.Id JOIN tbl_strategytype_master STM on S.StrategyTypeId = STM.Id JOIN tbl_venuetype_master 
VTM on S.VenueTypeId = VTM.Id JOIN tbl_thirdpartyapplication TM on S.ThirdPartyAppId = TM.Id JOIN tbl_business_master BM on S.BusinessId = BM.Id JOIN tbl_capacity_master CPM on S.CapacityId = CPM.Id 
JOIN tbl_StrategyStatus ss on ss.Id=s.StatusId
right JOIN (SELECT  MAX(Id) as Id FROM tbl_strategy GROUP BY REfnumber) t2  
ON S.ID = t2.Id WHERE s.id is not null and S.Id = @i_RefNumber 
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_GetAllStrategy]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[SP_GetAllStrategy]
(
 @i_userid VARCHAR(250)


)
AS
BEGIN
;With CompleteResult as(

select S.Id,S.RefNumber,FTAApplicationCodeId,FTAAC.FTAApplicationCode,FTAShortCodeId,CountryIdList,CountryNameList,FTAStrategyCodeId,FTASC.FTAStrategyCode,DiscretionaryCodeId,DM.Discretionarycode,BusinessSuffixId,BSFM.BusinessSuffix,S.ParentId,PM.ParentId as ParentIdValue,S.ChildId,cM.ChildID as ChildIdValue,BusinessLineId,BSL.BusinessLine,RegionId,R.RegionName,CountryId,FTAApplicationNameId,APN.FTAApplicationName,FTAApplicationOwnerId,ApplicationCategoryId,
ACM.ApplicationCategory,StrategyTypeId,STM.StrategyType,VenueTypeId,VTM.VenueType,CapacityId,CPM.Capacity,CreatedBy,CreatedDate,Description,S.IsActive,LastModifiedBy,LastModifiedDate,NoOfApprover,Version,FTAStrategyNameId,FTASN.FTAStrategyName,
S.FTAStrategyOwnerId,S.Priority,S.PriorityScore, SignOff,SignOffDate,SignoffBy,ThirdPartyAppId,TM.ThirdPartyAppName,BusinessId,BM.business,FTAApplicationMappingId,FTAStrategyMappingId,BusinessMappingId,
S.StatusId,Ss.StatusName,
convert(NVARCHAR, S.DecomissionedDate, 103) DecomissionedDate,convert(NVARCHAR, S.GoLiveDate, 103) GoLiveDate,SeniorManagementFunction,LTALongCode from tbl_strategy S join tbl_ftaapplicationcode_master FTAAC On S.FTAApplicationCodeId = FTAAC.Id 
join tbl_ftastrategycode_master FTASC on S.FTAStrategyCodeId = FTASC.Id JOin tbl_discretionarycode_master DM on s.DiscretionaryCodeId = DM.Id JOin tbl_businesssuffix_master BSFM on s.BusinessSuffixId = BSFM.Id 
JOIN tbl_parentid_master PM on s.ParentId = PM.Id join tbl_childid_master CM on S.ChildId = CM.Id JOIn tbl_businessline_master BSL on BusinessLineId = BSL.Id  JOIN tbl_region_master R on S.RegionId = R.id JOIN 
tbl_ftaapplicationname_master APN on S.FTAApplicationNameId = APN.Id JOIN tbl_applicationcategory_master ACM on S.ApplicationCategoryId = ACM.Id JOIN tbl_ftastrategyname_master FTASN on S.FTAStrategyNameId = FTASN.Id JOIN tbl_strategytype_master STM on S.StrategyTypeId = STM.Id JOIN tbl_venuetype_master 
VTM on S.VenueTypeId = VTM.Id JOIN tbl_thirdpartyapplication TM on S.ThirdPartyAppId = TM.Id JOIN tbl_business_master BM on S.BusinessId = BM.Id JOIN tbl_capacity_master CPM on S.CapacityId = CPM.Id 
JOIN tbl_StrategyStatus ss on ss.Id=s.StatusId
right JOIN (SELECT  MAX(Id) as Id FROM tbl_strategy GROUP BY REfnumber) t2  
ON S.ID = t2.Id where  s.id is not null 
)


select * from CompleteResult
 where BusinessLineId in( select b.Id from tbl_userBusinessSectormapping bs join tbl_businessLine_master b  on bs.BusinessSectorId =b.Id where Userid=@i_userid)
 and RegionId in( select r.Id from tbl_userregionmapping rm join tbl_region_master r on rm.RegionId = r.Id where  Userid=@i_userid)
 
 END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallregion]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallregion
CREATE  PROCEDURE [dbo].[sp_getallregion](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;

if(@i_Id !='') begin

select * from tbl_region_master where Id=@i_id;
end
else begin
select * from tbl_region_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallProduct]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallProduct
CREATE  PROCEDURE [dbo].[sp_getallProduct](
 @i_Id VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;

if(@i_Id !='') begin

select * from tbl_ProductTypemaster where Id=@i_id;
end
else begin
select * from tbl_ProductTypemaster;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallParentID]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallParentID
CREATE  PROCEDURE [dbo].[sp_getallParentID](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_ParentID_master where Id=@i_id;
end
else begin
select * from tbl_ParentID_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallFTAStrategyOwner]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallFTAStrategyOwner
CREATE  PROCEDURE [dbo].[sp_getallFTAStrategyOwner](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_FTAStrategyOwner_master where Id=@i_id;
end
else begin
select * from tbl_FTAStrategyOwner_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallFTAStrategyName]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallDiscretionaryCode
-- Dumping structure for procedure achiv1.sp_getallFTAApplicationCode

-- Dumping structure for procedure achiv1.sp_getallFTAApplicationName

-- Dumping structure for procedure achiv1.sp_getallFTAApplicationOwner

-- Dumping structure for procedure achiv1.sp_getallFTAStrategyCode
-- Dumping structure for procedure achiv1.sp_getallFTAStrategyName
CREATE  PROCEDURE [dbo].[sp_getallFTAStrategyName](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_FTAStrategyName_master where Id=@i_id;
end
else begin
select * from tbl_FTAStrategyName_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallFTAStrategyCode]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallFTAStrategyCode](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_FTAStrategyCode_master where Id=@i_id;
end
else begin
select * from tbl_FTAStrategyCode_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallFTAApplicationOwner]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallFTAApplicationOwner](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_FTAApplicationOwner_master where Id=@i_id;
end
else begin
select * from tbl_FTAApplicationOwner_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallFTAApplicationName]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallFTAApplicationName](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_FTAApplicationName_master where Id=@i_id;
end
else begin
select * from tbl_FTAApplicationName_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallFTAApplicationCode]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallFTAApplicationCode](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_FTAApplicationCode_master where Id=@i_id;
end
else begin
select * from tbl_FTAApplicationCode_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallDiscretionaryCode]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallDiscretionaryCode](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_DiscretionaryCode_master where Id=@i_id;
end
else begin
select * from tbl_DiscretionaryCode_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallcountry]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_getallcountry
CREATE  PROCEDURE [dbo].[sp_getallcountry](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_country_master where Id=@i_id;
end
else begin
select * from tbl_country_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallChildID]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
---- Dumping structure for procedure achiv1.SP_AddRole
--CREATE  PROCEDURE SP_AddRole
--AS
--BEGIN
--SET NOCOUNT ON;

--END;
--GO


-- Dumping structure for procedure achiv1.SP_DeleteRole

-- Dumping structure for procedure achiv1.sp_delete_ApplicationCategory
-- Dumping structure for procedure achiv1.sp_delete_ApplicationMaster

-- Dumping structure for procedure achiv1.sp_delete_Business


-- Dumping structure for procedure achiv1.sp_delete_BusinessLine


-- Dumping structure for procedure achiv1.sp_delete_BusinessMapping

-- Dumping structure for procedure achiv1.sp_delete_BusinessSuffix

-- Dumping structure for procedure achiv1.sp_delete_Capacity

-- Dumping structure for procedure achiv1.sp_delete_ChildID
-- Dumping structure for procedure achiv1.sp_delete_country

-- Dumping structure for procedure achiv1.sp_delete_FTAApplicationName
-- Dumping structure for procedure achiv1.sp_delete_FTAApplicationOwner
-- Dumping structure for procedure achiv1.sp_delete_FTAStrategyMapping

-- Dumping structure for procedure achiv1.sp_delete_FTAStrategyName

-- Dumping structure for procedure achiv1.sp_delete_FTAStrategyOwner

-- Dumping structure for procedure achiv1.sp_delete_ParentID
-- Dumping structure for procedure achiv1.sp_delete_ProductType

-- Dumping structure for procedure achiv1.sp_delete_region
-- Dumping structure for procedure achiv1.sp_delete_Strategytype

-- Dumping structure for procedure achiv1.sp_delete_strategy_Approval

-- Dumping structure for procedure achiv1.sp_delete_SystemFlow

-- Dumping structure for procedure achiv1.sp_delete_Venuetype
-- Dumping structure for procedure achiv1.sp_getallApplicationCategory
-- Dumping structure for procedure achiv1.sp_getallApplicationMaster

-- Dumping structure for procedure achiv1.sp_getallBusiness


-- Dumping structure for procedure achiv1.sp_getallBusinessLine
-- Dumping structure for procedure achiv1.sp_getallBusinessSuffix

-- Dumping structure for procedure achiv1.sp_getallCapacity
-- Dumping structure for procedure achiv1.sp_getallChildID
CREATE  PROCEDURE [dbo].[sp_getallChildID](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_ChildID_master where Id=@i_id;
end
else begin
select * from tbl_ChildID_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallCapacity]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallCapacity](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_Capacity_master where Id=@i_id;
end
else begin
select * from tbl_Capacity_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallBusinessSuffix]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallBusinessSuffix](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_BusinessSuffix_master where Id=@i_id;
end
else begin
select * from tbl_BusinessSuffix_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallBusinessLine]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallBusinessLine](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_BusinessLine_master where Id=@i_id;
end
else begin
select * from tbl_BusinessLine_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallBusiness]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_getallBusiness](
 @i_Id VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') begin

select * from tbl_Business_master where Id=@i_id;
end
else begin
select * from tbl_Business_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallApplicationMaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[sp_getallApplicationMaster](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;
if(@i_Id !='') begin

select * from tbl_ApplicationMaster where Id=@i_id;
end
else begin
select * from tbl_ApplicationMaster;
end 
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_getallApplicationCategory]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[sp_getallApplicationCategory](
 @i_Id VARCHAR(50)
)
AS
BEGIN
SET NOCOUNT ON;


if(@i_Id !='') 
begin
select * from tbl_ApplicationCategory_master where Id=@i_id;
end
else begin
select * from tbl_ApplicationCategory_master;
end 



END;
GO
/****** Object:  StoredProcedure [dbo].[sp_get_strategyVersionLog]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_get_strategyVersionLog
CREATE  PROCEDURE [dbo].[sp_get_strategyVersionLog](
 @i_id VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;

select * from tbl_strategyversionlog where RefNumber=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[SP_DeleteRole]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_DeleteRole](
 @i_id INT
)
AS
BEGIN
SET NOCOUNT ON;

delete from tbl_role_master where id=@i_id;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_deleteReportApplicationMapping]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_deleteFTAApplicationMapping
Create  PROCEDURE [dbo].[sp_deleteReportApplicationMapping](
 @i_id VARCHAR(50),
 @i_OutParam VARCHAR(50) OUT
)
AS
BEGIN
SET NOCOUNT ON;

 
delete from tbl_reportapplicationmapping where id =@i_id;
set @i_OutParam ='success';

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_deleteFTAApplicationMapping]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_deleteFTAApplicationMapping
CREATE  PROCEDURE [dbo].[sp_deleteFTAApplicationMapping](
 @i_id VARCHAR(50),
 @i_OutParam VARCHAR(50) OUT
)
AS
BEGIN
SET NOCOUNT ON;
declare @Shortcode varchar(150);
 IF exists (SELECT FTAShortCodeId FROM tbl_strategy  WHERE FTAApplicationMappingId=@i_id and IsActive='Y') 
 begin
 SELECT @Shortcode=FTAShortCodeId FROM tbl_strategy  WHERE FTAApplicationMappingId=@i_id and IsActive='Y';
 set @i_OutParam ='Mapping associated to strategy FTA short code' +@Shortcode;
 end
 else 
 begin

delete from tbl_FTAapplicationmapping where id =@i_id;
set @i_OutParam ='success';
end;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_Venuetype]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_Venuetype](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_Venuetype_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_Strategytype]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_Strategytype](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_Strategytype_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_strategy_Approval]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_strategy_Approval](
 @i_RefNumber VARCHAR(50),
 @i_Version VARCHAR(50),
 @i_Approver VARCHAR(50)


)
AS
BEGIN
SET NOCOUNT ON;

update tbl_StrategyApproval set IsActive='N' where RefNumber=@i_RefNumber and Version=@i_Version  and Approver=@i_Approver;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_region]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_region](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_region_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_ProductType]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_ProductType](
 @i_id INT
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_ProductTypemaster where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_ParentID]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_ParentID](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_ParentID_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_FTAStrategyOwner]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_FTAStrategyOwner](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_FTAStrategyOwner_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_FTAStrategyName]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_FTAStrategyName](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_FTAStrategyName_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_FTAStrategyMapping]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_FTAStrategyMapping](
 @i_id VARCHAR(50)
,
 @i_OutParam VARCHAR(50) OUT
)
AS
BEGIN
declare @Shortcode varchar(150);
 if exists (SELECT count(*) FROM tbl_strategy  WHERE FTAStrategyMappingId=@i_id and IsActive='Y') 
  begin
 SELECT @Shortcode=FTAShortCodeId FROM tbl_strategy  WHERE FTAStrategyMappingId=@i_id and IsActive='Y'
 set @i_OutParam ='Mapping associated to strategy';
 end
 else 
 begin

delete from tbl_ftastrategynamemapping where id =@i_id;
 set @i_OutParam ='success';
end;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_FTAApplicationOwner]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_FTAApplicationOwner](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_FTAApplicationOwner_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_FTAApplicationName]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_FTAApplicationName](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_FTAApplicationName_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_country]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_country](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_country_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_ChildID]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_ChildID](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_ChildID_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_Capacity]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_Capacity](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_Capacity_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_BusinessSuffix]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_BusinessSuffix](
 @i_id INT

)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_BusinessSuffix_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_BusinessMapping]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_delete_BusinessMapping](
 @i_id INT
,
 @i_OutParam VARCHAR(50) OUT
)
AS
BEGIN
SET NOCOUNT ON;
declare @Shortcode varchar(150);
 IF exists (SELECT FTAShortCodeId FROM tbl_strategy  WHERE BusinessMappingId=@i_id AND IsActive='Y') 
 begin
 SELECT @Shortcode=FTAShortCodeId FROM tbl_strategy  WHERE BusinessMappingId=@i_id AND IsActive='Y'
 set @i_OutParam ='Mapping associated to strategy';
 end
 else 
 begin
delete from tbl_businessmapping where id =@i_id;
set @i_OutParam ='success';
end;


END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_BusinessLine]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_BusinessLine](
 @i_id INT
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_BusinessLine_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_Business]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_Business](
 @i_id INT
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_Business_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_ApplicationMaster]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_ApplicationMaster](
 @i_id INT

)
AS
BEGIN
delete from tbl_ApplicationMaster where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_delete_ApplicationCategory]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[sp_delete_ApplicationCategory](
 @i_id INT
)
AS
BEGIN
SET NOCOUNT ON;
delete from tbl_ApplicationCategory_master where id=@i_id;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_adduser1]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[sp_adduser1](
 @userid VARCHAR(50),
 @username VARCHAR(50),
 @emailid VARCHAR(50),
 @Roleid VARCHAR(50),
@password NVARCHAR(max),
 @IsADUser VARCHAR(50)
)
AS
BEGIN

insert into tbl_user_master (Userid,UserName,EmailId,RoleId,Status,password,IsADUser) values(@userid,@username,@emailid,@Roleid,'Active',@password,@IsADUser);
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_addReportApplicationMapping]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_addFTAApplicationMapping
CREATE PROCEDURE [dbo].[sp_addReportApplicationMapping](
 @i_FTAApplicationNameId VARCHAR(50),
 @i_FTAApplicationCodeId VARCHAR(50),
 @i_ChildId VARCHAR(50),
 @i_ThirdPartyAppId VARCHAR(50),
 @i_ParentID VARCHAR(50),
 @i_ApplicationOwnerId VARCHAR(500),
 @i_ApplicationCategoryId VARCHAR(50),
 @i_CountryId VARCHAR(50),
 @i_RegionId VARCHAR(50),
 @i_BusinessLineId VARCHAR(50),
 @i_OutParam VARCHAR(50) Output
 )
AS
BEGIN
SET NOCOUNT ON;

 IF  exists (SELECT * FROM tbl_reportapplicationmapping WHERE FTAApplicationNameId=@i_FTAApplicationNameId and FTAApplicationCodeId=@i_FTAApplicationCodeId and ChildId=@i_ChildId and ThirdPartyAppId=@i_ThirdPartyAppId and ParentID=@i_ParentID and ApplicationOwnerId=@i_ApplicationOwnerId and ApplicationCategoryId=@i_ApplicationCategoryId and RegionId=@i_RegionId and CountryId=@i_CountryId and BusinessLineId=@i_BusinessLineId) 
 set @i_OutParam ='Report Application Mapping already exists';
 else 
 begin
 

insert into tbl_reportapplicationmapping(FTAApplicationNameId,FTAApplicationCodeId,ChildId,ThirdPartyAppId,ParentID,ApplicationOwnerId,ApplicationCategoryId,RegionId,CountryId,BusinessLineId) 
values (@i_FTAApplicationNameId,@i_FTAApplicationCodeId,@i_ChildId,@i_ThirdPartyAppId,@i_ParentID,@i_ApplicationOwnerId,@i_ApplicationCategoryId,@i_RegionId,@i_CountryId ,@i_BusinessLineId);

set @i_OutParam ='success';
ENd;


END;
GO
/****** Object:  StoredProcedure [dbo].[sp_addFTAStrategyMapping]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_addFTAStrategyMapping
CREATE  PROCEDURE [dbo].[sp_addFTAStrategyMapping](
 @i_FTAStrategyNameId INT,
 @i_FTAStrategyCodeId INT,
 @i_OutParam VARCHAR(50) OUT
)
AS
BEGIN

 IF exists(SELECT * FROM tbl_ftastrategynamemapping  WHERE FTAStrategyNameId=@i_FTAStrategyNameId and FTAStrategyCodeId=@i_FTAStrategyCodeId) 
 set @i_OutParam ='Mapping already exists';
 else 
 begin
insert into tbl_ftastrategynamemapping(FTAStrategyNameId,FTAStrategyCodeId) values (@i_FTAStrategyNameId,@i_FTAStrategyCodeId);
set @i_OutParam ='success';
ENd 


END;
GO
/****** Object:  StoredProcedure [dbo].[sp_addFTAApplicationMapping]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_addFTAApplicationMapping
CREATE  PROCEDURE [dbo].[sp_addFTAApplicationMapping](
 @i_FTAApplicationNameId VARCHAR(50),
 @i_FTAApplicationCodeId VARCHAR(50),
 @i_ChildId VARCHAR(50),
 @i_ThirdPartyAppId VARCHAR(50),
 @i_ParentID VARCHAR(50),
 @i_ApplicationOwnerId VARCHAR(500),
 @i_ApplicationCategoryId VARCHAR(50),
 @i_OutParam VARCHAR(50) Output
 )
AS
BEGIN
SET NOCOUNT ON;

 IF  exists (SELECT * FROM tbl_FTAApplicationmapping  WHERE FTAApplicationNameId=@i_FTAApplicationNameId and FTAApplicationCodeId=@i_FTAApplicationCodeId and ChildId=@i_ChildId and ThirdPartyAppId=@i_ThirdPartyAppId and ParentID=@i_ParentID and ApplicationOwnerId=@i_ApplicationOwnerId and ApplicationCategoryId=@i_ApplicationCategoryId) 
 set @i_OutParam ='FTA Application Mapping already exists';
 else 
 begin
 

insert into tbl_FTAApplicationmapping(FTAApplicationNameId,FTAApplicationCodeId,ChildId,ThirdPartyAppId,ParentID,ApplicationOwnerId,ApplicationCategoryId) 
values (@i_FTAApplicationNameId,@i_FTAApplicationCodeId,@i_ChildId,@i_ThirdPartyAppId,@i_ParentID,@i_ApplicationOwnerId,@i_ApplicationCategoryId);

set @i_OutParam ='success';
ENd;


END;
GO
/****** Object:  StoredProcedure [dbo].[sp_addbusinessmapping]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_addbusinessmapping](
 @i_businesssuffixid INT,
 @i_businessid INT,
 @i_OutParam VARCHAR(50) OUT
)
AS
BEGIN

 IF exists (SELECT * FROM tbl_businessmapping  WHERE BusinessId=@i_BusinessId and BusinessSuffixId=@i_BusinessSuffixId) 
 set @i_OutParam ='Business Mapping already exists';
 else
 begin
insert into tbl_businessmapping(BusinessId,BusinessSuffixId) values (@i_businessid,@i_businesssuffixid);
set @i_OutParam ='success';
end;


END;
GO
/****** Object:  StoredProcedure [dbo].[Get_StrategyLatestversionById]    Script Date: 03/06/2018 17:37:09 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.Get_StrategyLatestversionById
CREATE  PROCEDURE [dbo].[Get_StrategyLatestversionById](
 @i_RefNumber VARCHAR(50)


)
AS
BEGIN
SET NOCOUNT ON;
Select Version from tbl_strategy where RefNumber=@i_RefNumber order by Version Desc ;--LIMIT 1;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_updateuser]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_updateuser
CREATE  PROCEDURE [dbo].[sp_updateuser](
 @i_userid VARCHAR(50),
 @i_username VARCHAR(50),
 @i_emailid VARCHAR(50),
 @i_Roleid VARCHAR(50),
 @i_status VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;

update tbl_user_master set UserName=@i_username,EmailId=@i_emailid,RoleId=@i_Roleid,Status=@i_status 
where Userid=@i_userid;

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_Venuetypemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE  PROCEDURE [dbo].[sp_update_Venuetypemaster](
 @i_id INT,
 @i_Venuetype VARCHAR(50),
 @i_Venuetypecode VARCHAR(50)
)
AS
BEGIN
IF exists (SELECT * FROM tbl_Venuetype_master WHERE Venuetype=@i_Venuetype) 
 print '1'
 else
 begin
update tbl_Venuetype_master set Venuetype=@i_Venuetype,VenueTypecode=@i_Venuetypecode  where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_Strategytypemaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_Strategytypemaster
CREATE  PROCEDURE [dbo].[sp_update_Strategytypemaster](
 @i_id INT,
 @i_Strategytype VARCHAR(50),
 @i_Strategytypecode VARCHAR(50)
)
AS
BEGIN

IF exists (SELECT * FROM tbl_Strategytype_master WHERE StrategyType=@i_Strategytype) 
 print '1'
 else
 begin
update tbl_Strategytype_master set StrategyType=@i_Strategytype,StrategyTypecode=@i_Strategytypecode where id=@i_id;
end
END;
GO
/****** Object:  StoredProcedure [dbo].[Sp_update_strategy_approval]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.Sp_update_strategy_approval
CREATE  PROCEDURE [dbo].[Sp_update_strategy_approval](
 @i_Comments VARCHAR(50),
 @i_Status VARCHAR(50),
 @i_RefNumber VARCHAR(50),
 @i_Version VARCHAR(50),
 @i_Approver VARCHAR(50),
    @i_Type VARCHAR(50)

)
AS
BEGIN
SET NOCOUNT ON;
if(@i_Type='A') begin
update tbl_StrategyApproval set Comments =@i_Comments,Status=@i_Status,ApprovedDate=getdate() where RefNumber=@i_RefNumber and Version=@i_Version  and Approver=@i_Approver;
end
else begin
update tbl_approvaltransfer set Comments =@i_Comments,Status=@i_Status,ApprovedDate=getdate() where RefNumber=@i_RefNumber and Version=@i_Version  and Approver=@i_Approver;
end 

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_regionmaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_regionmaster
CREATE  PROCEDURE [dbo].[sp_update_regionmaster](
 @i_id INT,
 @i_regionname VARCHAR(50)
)
AS
BEGIN

IF exists (SELECT * FROM tbl_region_master WHERE regionname=@i_regionname) 
 print '1'
 else
 begin
update tbl_region_master set regionname=@i_regionname where id=@i_id;
end

END;
GO
/****** Object:  StoredProcedure [dbo].[sp_update_Productmaster]    Script Date: 03/06/2018 17:37:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- Dumping structure for procedure achiv1.sp_update_Productmaster
CREATE  PROCEDURE [dbo].[sp_update_Productmaster](
 @i_id INT,
 @i_ProductName VARCHAR(50)


)
AS
BEGIN

IF exists (SELECT * FROM tbl_ProductTypemaster WHERE ProductType=@i_ProductName) 
 print '1'
 else
 begin
update tbl_ProductTypemaster set ProductType =@i_ProductName where id=@i_id;
end
END;
GO
